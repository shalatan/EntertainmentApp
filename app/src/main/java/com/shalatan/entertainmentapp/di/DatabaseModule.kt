package com.shalatan.entertainmentapp.di

import android.content.Context
import androidx.room.Room
import com.shalatan.entertainmentapp.database.MovieDAO
import com.shalatan.entertainmentapp.database.MovieDatabase
import dagger.Module
import dagger.Provides
import dagger.hilt.InstallIn
import dagger.hilt.android.qualifiers.ApplicationContext
import dagger.hilt.components.SingletonComponent
import javax.inject.Singleton

@InstallIn(SingletonComponent::class)
@Module
object DatabaseModule {

    @Provides
    fun provideMovieDao(appDatabase: MovieDatabase): MovieDAO {
        return appDatabase.logDao()
    }

    /**
     * Our project doesn't own the AppDatabase class either, because it is generated by Room.
     * We can't constructor inject AppDatabase, but we can use an @Provides function to provide it, too.
     */
    @Provides
    @Singleton
    fun provideDatabase(@ApplicationContext appContext: Context): MovieDatabase {
        return Room.databaseBuilder(
            appContext,
            MovieDatabase::class.java,
            "movie.db"
        ).build()
    }
}